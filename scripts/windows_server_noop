#!/usr/bin/env python

from multiprocessing.connection import Listener
import time
import logging


logging.basicConfig()
logging.getLogger().setLevel(logging.DEBUG)
logger = logging.getLogger(__name__)


class SpeechServer(object):
    def __init__(self):
        self._address = ("0.0.0.0", 8000)
        self._listener = Listener(self._address)

    def spin(self):
        logger.info('windows server started listening on port %s', self._listener.address)
        while True:
            try:
                conn = self._listener.accept()
                self.process_connection(conn)
            except KeyboardInterrupt:
                logger.warn('keyboard interrupt')
                break
            except:
                logger.exception('speech exception')

            conn.close()


    def process_connection(self, conn):
        print 'connection accepted from', self._listener.last_accepted

        msg = conn.recv()
        print msg

        timeout = 2
        timeout_time = time.time() + timeout
        logger.info('timeout at %d seconds', timeout)
        while time.time() < timeout_time:
            # is there a cancel message queued?
            if conn.poll():
                print conn.recv()

            time.sleep(0.1)

        logger.info('result:')
        conn.send('apple')

server = SpeechServer()
server.spin()

